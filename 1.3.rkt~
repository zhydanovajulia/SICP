#lang racket
(define (>= x y) (or (> x y)(= x y))) 

(define (ab a b c) (and (>= a c)(>= b c))) 
(define (ac a b c) (and (>= a b)(>= c b)))
(define (bc a b c) (and (>= b a)(>= c a)))



;(ab 4 5 3)
;(ac 4 5 3)
;(bc 4 5 3)
(define (max a b c) (if (ab a b c)
                        (values a b)
                        (if (ac a b c) 
                            (values a c)
                            (if (bc a b c)
                                (values b c)
                                false))))

(max 3 5 8)
(define (square x) (* x x))
(square 3)
(define (sum_squares x y) (+ (square x) (square y)))
(sum_squares 2 3)
(define (f a b c) (sum_squares (max a b c)))
(f 3 5 8)
